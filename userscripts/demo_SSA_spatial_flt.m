% This script demonstrates how different spatial filtering and BCI paradimgs are affected 
% by changes that occures between calibration (modeling) and online (model
% aplication). It also demonstrates how Stationarity Subspace Analysis can
% help to reduce the negative effect by seprarating stationary subspace
% from non-stationary. 
%
% Please cite:
%
% Aleksandar Miladinovic, Milos Ajcevic, Joanna Jarmolowska, Uros Marusic, Marco Colussi, Giulia Silveri, Piero Paolo Battaglini, Agostino Accardo,
% Effect of power feature covariance shift on BCI spatial-filtering techniques: A comparative study,
% Computer Methods and Programs in Biomedicine, https://doi.org/10.1016/j.cmpb.2020.105808
%
% Created by Aleksandar Miladinovic, aleksandar.miladinovic@phd.units.it


%check if bcilab is loaded
exist bci_visualize
if ans
    disp('BCILAB already loaded');
else
    % if not load BCILAB
    cd('..')
    bcilab;
end

%% load data
calib_data{1} = io_loadset('bcilab:/userdata/ssa_demo/calib_data.gdf');
test_data{1} = io_loadset('bcilab:/userdata/ssa_demo/test_data_30min_aft.gdf');

%define markers
mrks = {{'769'},{'770'}};

%define time window
timewnd=[1.0 5.0];
%%
%initiate approaches without Stationarity Subspace Analysis
approaches_no_ssa=[];

%initiate approaches with Stationarity Subspace Analysis

approaches_with_ssa=[];
%%
% definition of approches

%SpecRCSP

approaches_with_ssa.SPECRCSP={'SpecRCSP' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'StationarySubspace', { ...
    'StationaryDim', -0.30 ...
    'BlockLength', 30 ...
    'Operation', 'keep_stationary'} ...
    'DataCleaning', 'off' ...
    'IIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'FrequencyRange', [6 32]} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}}


approaches_no_ssa.SPECRCSP={'SpecRCSP' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'StationarySubspace', 'off' ...
    'DataCleaning', 'off' ...
    'IIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'FrequencyRange', [6 32]} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}}

%% FBCSP
%define time windows, in the case of FBCSP are all the same
T1=[0.5 4.5];T2=[0.5 4.5];T3=[0.5 4.5];T4=[0.5 4.5];T5=[0.5 4.5];T6=[0.5 4.5];T7=[0.5 4.5];

approaches_with_ssa.FBCSP={'FBCSP' ...
    'SignalProcessing', { ...
    'Resampling', { ...
    'SamplingRate', 128} ...
    'StationarySubspace', { ...
    'StationaryDim', -0.3 ...
    'BlockLength', 30 ... %lenght of the epoch
    'Operation', 'keep_stationary'} ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'FreqWindows', [6 12;10 16;14 20;18 24;22 28;26 32;6 32] ...
    'TimeWindows', [T1;T2;T3;T4;T5;T6;T7]} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Robust', true}}}}

approaches_no_ssa.FBCSP={'FBCSP' ...
    'SignalProcessing', { ...
    'Resampling', { ...
    'SamplingRate', 128} ...
    'StationarySubspace', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'FreqWindows', [6 12;10 16;14 20;18 24;22 28;26 32;6 32] ...
    'TimeWindows', [T1;T2;T3;T4;T5;T6;T7]} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Robust', true}}}}


%% FBCSPT
T1=[0.5 3.0];T2=[0.5 3.0]; T3=[1.5 4.5];T4=[1.5 4.5];T5=[1.5 4.5];T6=[1.5 4.5];T7=[0.5 4.5];

approaches_with_ssa.FBCSPT={'FBCSP' ...
    'SignalProcessing', { ...
    'Resampling', { ...
    'SamplingRate', 128} ...
    'StationarySubspace', { ...
    'StationaryDim', -0.3 ...
    'BlockLength', 30 ... %lenght of the epoch
    'Operation', 'keep_stationary'} ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'FreqWindows', [6 12;10 16;14 20;18 24;22 28;26 32;6 32] ...
    'TimeWindows', [T1;T2;T3;T4;T5;T6;T7]} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Robust', true}}}}

approaches_no_ssa.FBCSPT={'FBCSP' ...
    'SignalProcessing', { ...
    'Resampling', { ...
    'SamplingRate', 128} ...
    'StationarySubspace', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'FreqWindows', [6 12;10 16;14 20;18 24;22 28;26 32;6 32] ...
    'TimeWindows', [T1;T2;T3;T4;T5;T6;T7]} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Robust', true}}}}


%% SLap
approaches_with_ssa.SLap={'Bandpower' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'IIRFilter', 'off' ...
    'StationarySubspace', { ...
    'StationaryDim', -0.30 ...
    'BlockLength', 30 ...
    'Operation', 'keep_stationary'} ...
    'DataCleaning', 'off' ...
    'FIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}}

approaches_no_ssa.SLap={'Bandpower' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'IIRFilter', 'off' ...
    'StationarySubspace', 'off' ...
    'DataCleaning', 'off' ...
    'FIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}}

%% SPoC

approaches_with_ssa.SPoC ={'SPoC' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'StationarySubspace', { ...
    'StationaryDim', -0.30 ...
    'BlockLength', 30 ...
    'Operation', 'keep_stationary'} ...
    'DataCleaning', 'off' ...
    'FIRFilter', 'off' ...
    'IIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}};

approaches_no_ssa.SPoC ={'SPoC' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'StationarySubspace', 'off' ...
    'DataCleaning', 'off' ...
    'FIRFilter', 'off' ...
    'IIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}};

%% SpecCSP
approaches_with_ssa.SpecCSP= {'SpecCSP' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'StationarySubspace', { ...
    'StationaryDim', -0.30 ...
    'BlockLength', 30 ...
    'Operation', 'keep_stationary'} ...
    'DataCleaning', 'off' ...
    'FIRFilter', 'off' ...
    'IIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'SpectralPrior', @(f)f>=6&f<=32} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}}


approaches_no_ssa.SpecCSP= {'SpecCSP' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'StationarySubspace', 'off' ...
    'DataCleaning', 'off' ...
    'FIRFilter', 'off' ...
    'IIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'SpectralPrior', @(f)f>=6&f<=32} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}}

%% CSP

approaches_with_ssa.CSP = {'CSP' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'StationarySubspace', { ...
    'StationaryDim', -0.30 ...
    'BlockLength', 30 ...
    'Operation', 'keep_stationary'} ...
    'DataCleaning', 'off' ...
    'FIRFilter', { ...
    'Frequencies', [4 6 32 34]} ...
    'IIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'ShrinkageCovariance', false} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}}


approaches_no_ssa.CSP = {'CSP' ...
    'SignalProcessing', { ...
    'Resampling', {'SamplingRate', 128} ...
    'StationarySubspace', 'off' ...
    'DataCleaning', 'off' ...
    'FIRFilter', { ...
    'Frequencies', [4 6 32 34]} ...
    'IIRFilter', 'off' ...
    'EpochExtraction', { ...
    'TimeWindow', timewnd}} ...
    'Prediction', { ...
    'FeatureExtraction', { ...
    'ShrinkageCovariance', false} ...
    'MachineLearning', { ...
    'Learner', {'lda' ...
    'Regularizer', 'auto' ...
    'Robust', true}}}}


%% BCI modeling with and estimating error (accuracy) 10-fold chronological/blockwise cross-validation with 5 trials

results_no_ssa = bci_batchtrain('StudyTag','demo_no_SSA','Data',calib_data,'PredictSets',test_data,'Approaches',approaches_no_ssa,'TargetMarkers',mrks,'ReuseExisting',false, ...
    'LoadArguments',{'type','EEG'}, 'TrainArguments',{'EvaluationScheme',{'chron',10,5}},'StoragePattern','results/batchresults/%caller-%study/%approach-%set.mat');

results_with_ssa = bci_batchtrain('StudyTag','demo_with_SSA','Data',calib_data,'PredictSets',test_data,'Approaches',approaches_with_ssa,'TargetMarkers',mrks,'ReuseExisting',false, ...
    'LoadArguments',{'type','EEG'}, 'TrainArguments',{'EvaluationScheme',{'chron',10,5}},'StoragePattern','results/%caller-%study/%approach-%set.mat');
%% Extract models metrics


fn = fieldnames(results_no_ssa);

% estimated accuracy and real- test accuracy
for i=1:length(fn)
    estimated_accuracy(:,i)=1-[results_no_ssa.(fn{i}).loss];
    test_accuracy(:,i)=1-[results_no_ssa.(fn{i}).pred_loss];
    
end

% type-I/II estimated and type-I/II real-test (fp-false positive ratio...)
for i=1:length(fn)
    sbj=1;
    fp_est(sbj,i)=results_no_ssa.(fn{i})(sbj).stats.FP;
    fn_est(sbj,i)=results_no_ssa.(fn{i})(sbj).stats.FN;
    tp_est(sbj,i)=results_no_ssa.(fn{i})(sbj).stats.TP;
    tn_est(sbj,i)=results_no_ssa.(fn{i})(sbj).stats.TN;
    
    fp_rl(sbj,i)=results_no_ssa.(fn{i})(sbj).pred_stats{1, 1}.FP;
    fn_rl(sbj,i)=results_no_ssa.(fn{i})(sbj).pred_stats{1, 1}.FN;
    tp_rl(sbj,i)=results_no_ssa.(fn{i})(sbj).pred_stats{1, 1}.TP;
    tn_rl(sbj,i)=results_no_ssa.(fn{i})(sbj).pred_stats{1, 1}.TN;
    
end

fn = fieldnames(results_with_ssa);
values=[];
for i=1:length(fn)
    estimated_accuracy_ssa(:,i)=1-[results_with_ssa.(fn{i}).loss];
    test_accuracy_ssa(:,i)=1-[results_with_ssa.(fn{i}).pred_loss];
    
end
for i=1:length(fn)
    sbj=1;
    fp_est_ssa(sbj,i)=results_with_ssa.(fn{i})(sbj).stats.FP;
    fn_est_ssa(sbj,i)=results_with_ssa.(fn{i})(sbj).stats.FN;
    tp_est_ssa(sbj,i)=results_with_ssa.(fn{i})(sbj).stats.TP;
    tn_est_ssa(sbj,i)=results_with_ssa.(fn{i})(sbj).stats.TN;
    
    fp_rl_ssa(sbj,i)=results_with_ssa.(fn{i})(sbj).pred_stats{1, 1}.FP;
    fn_rl_ssa(sbj,i)=results_with_ssa.(fn{i})(sbj).pred_stats{1, 1}.FN;
    tp_rl_ssa(sbj,i)=results_with_ssa.(fn{i})(sbj).pred_stats{1, 1}.TP;
    tn_rl_ssa(sbj,i)=results_with_ssa.(fn{i})(sbj).pred_stats{1, 1}.TN;
    
end

%% Plot results
figure
subplot(4,1,1)
bar(estimated_accuracy)
title("Estimated Accuracy");
xticklabels(fn);
ylim([0 1.0]);


subplot(4,1,2)
bar(test_accuracy_ssa)
title("Real(tested) Accuracy");
xticklabels(fn);
ylim([0 1.0]);


subplot(4,1,3)
bar(estimated_accuracy)
title("Estimated Accuracy + SSA");
xticklabels(fn);
ylim([0 1.0]);


subplot(4,1,4)
bar(test_accuracy_ssa)
title("Real(tested) Accuracy + SSA");
xticklabels(fn);
ylim([0 1.0]);

figure
subplot(2,1,1)
bar(estimated_accuracy-test_accuracy)
title("Differences between training and test set");
xticklabels(fn);
ylim([-0.3 0.3]);

subplot(2,1,2)
bar(estimated_accuracy_ssa-test_accuracy_ssa)
title("Differences between training and test set after SSA");
xticklabels(fn);
ylim([-0.3 0.3]);
